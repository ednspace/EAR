CCS PCM C Compiler, Version 4.128, 51913               18-Apr-14 20:07

               Filename: C:\Users\Customer\Dropbox\Pic_Programs\12F1822\Pulse Width Measurement\main.lst

               ROM used: 398 words (19%)
                         Largest free fragment is 1649
               RAM used: 21 (16%) at main() level
                         44 (34%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLP  00
0001:  GOTO   11F
0002:  NOP
*
0004:  CLRF   03
0005:  CLRF   0A
0006:  MOVLB  00
0007:  MOVF   20,W
0008:  MOVWF  24
0009:  MOVF   21,W
000A:  MOVWF  25
000B:  MOVF   22,W
000C:  MOVWF  26
000D:  MOVF   23,W
000E:  MOVWF  27
000F:  CLRF   05
0010:  MOVLW  91
0011:  MOVWF  04
0012:  BTFSS  00.2
0013:  GOTO   016
0014:  BTFSC  11.2
0015:  GOTO   01F
0016:  MOVF   24,W
0017:  MOVWF  20
0018:  MOVF   25,W
0019:  MOVWF  21
001A:  MOVF   26,W
001B:  MOVWF  22
001C:  MOVF   27,W
001D:  MOVWF  23
001E:  RETFIE
.................... #include <12f1822.h>   
.................... //////// Standard Header file for the PIC12F1822 device //////////////// 
.................... #device PIC12F1822 
.................... #list 
....................  
.................... #fuses INTRC_IO,NOWDT,NOPROTECT,NOMCLR  
.................... #use delay(clock=500000) 
010F:  MOVLW  20
0110:  MOVWF  05
0111:  MOVLW  14
0112:  MOVWF  04
0113:  MOVF   00,W
0114:  BTFSC  03.2
0115:  GOTO   11D
0116:  MOVLW  28
0117:  MOVWF  20
0118:  DECFSZ 20,F
0119:  GOTO   118
011A:  NOP
011B:  DECFSZ 00,F
011C:  GOTO   116
011D:  MOVLP  00
011E:  GOTO   18A (RETURN)
.................... #use rs232(baud=2400, UART2, ERRORS) //Makes the Xmit PIN 
....................  
.................... int8 capture_falling_edge; 
.................... int8 got_pulse_width;  
.................... int16  ccp_delta;  
....................  
....................  
.................... #int_ccp1  
.................... void ccp1_isr(void)  
.................... {  
.................... static int16 t1_falling_edge;  
*
0133:  MOVLB  00
0134:  CLRF   2D
0135:  CLRF   2E
....................  
.................... // If current interrupt is for falling edge.  
.................... if(capture_falling_edge)  
*
001F:  MOVF   29,F
0020:  BTFSC  03.2
0021:  GOTO   03C
....................   {  
....................    setup_ccp1(CCP_CAPTURE_RE);  
0022:  MOVLB  02
0023:  BCF    1D.0
0024:  BCF    1D.1
0025:  MOVLB  01
0026:  BSF    0C.2
0027:  MOVLB  05
0028:  CLRF   13
0029:  MOVLW  05
002A:  MOVWF  13
002B:  CLRF   14
002C:  CLRF   15
002D:  BCF    1E.0
002E:  BCF    1E.1
002F:  MOVLW  01
0030:  MOVWF  16
....................    capture_falling_edge = FALSE;  
0031:  MOVLB  00
0032:  CLRF   29
....................    t1_falling_edge = CCP_1;  
0033:  MOVLB  05
0034:  MOVF   12,W
0035:  MOVLB  00
0036:  MOVWF  2E
0037:  MOVLB  05
0038:  MOVF   11,W
0039:  MOVLB  00
003A:  MOVWF  2D
....................   }  
.................... else  
003B:  GOTO   059
....................   {  
....................    setup_ccp1(CCP_CAPTURE_FE);  
003C:  MOVLB  02
003D:  BCF    1D.0
003E:  BCF    1D.1
003F:  MOVLB  01
0040:  BSF    0C.2
0041:  MOVLB  05
0042:  CLRF   13
0043:  MOVLW  04
0044:  MOVWF  13
0045:  CLRF   14
0046:  CLRF   15
0047:  BCF    1E.0
0048:  BCF    1E.1
0049:  MOVLW  01
004A:  MOVWF  16
....................    capture_falling_edge = TRUE;  
004B:  MOVLB  00
004C:  MOVWF  29
....................    ccp_delta = CCP_1 - t1_falling_edge;  
004D:  MOVF   2D,W
004E:  MOVLB  05
004F:  SUBWF  11,W
0050:  MOVLB  00
0051:  MOVWF  2B
0052:  MOVF   2E,W
0053:  MOVLB  05
0054:  SUBWFC 12,W
0055:  MOVLB  00
0056:  MOVWF  2C
....................    got_pulse_width = TRUE;  
0057:  MOVLW  01
0058:  MOVWF  2A
....................   }  
....................  
.................... }  
....................  
.................... //====================================  
0059:  BCF    11.2
005A:  MOVLP  00
005B:  GOTO   016
.................... main()  
.................... {  
*
011F:  CLRF   05
0120:  CLRF   04
0121:  MOVLW  1F
0122:  ANDWF  03,F
0123:  MOVLW  3A
0124:  MOVLB  01
0125:  MOVWF  19
0126:  MOVLB  00
0127:  CLRF   28
0128:  MOVLW  0C
0129:  MOVLB  03
012A:  MOVWF  1B
012B:  MOVLW  A6
012C:  MOVWF  1E
012D:  MOVLW  90
012E:  MOVWF  1D
012F:  CLRF   0C
0130:  MOVLB  02
0131:  CLRF   12
0132:  CLRF   11
.................... int16 pulse_width_ms;  
.................... int16 local_ccp_delta;  
....................  
.................... got_pulse_width = FALSE;  
*
0136:  CLRF   2A
.................... capture_falling_edge = TRUE;  
0137:  MOVLW  01
0138:  MOVWF  29
....................  
.................... setup_oscillator(OSC_500KHZ|OSC_INTRC|OSC_PLL_OFF); 
0139:  MOVLW  3A
013A:  MOVLB  01
013B:  MOVWF  19
.................... setup_CCP1(CCP_CAPTURE_FE); 
013C:  MOVLB  02
013D:  BCF    1D.0
013E:  BCF    1D.1
013F:  MOVLB  01
0140:  BSF    0C.2
0141:  MOVLB  05
0142:  CLRF   13
0143:  MOVLW  04
0144:  MOVWF  13
0145:  CLRF   14
0146:  CLRF   15
0147:  BCF    1E.0
0148:  BCF    1E.1
0149:  MOVLW  01
014A:  MOVWF  16
.................... setup_timer_1(T1_INTERNAL | T1_DIV_BY_8 );  
014B:  MOVLB  02
014C:  BCF    1D.3
014D:  MOVLW  35
014E:  MOVLB  00
014F:  MOVWF  18
0150:  CLRF   19
.................... enable_interrupts(INT_CCP1);  
0151:  MOVLB  01
0152:  BSF    11.2
.................... enable_interrupts(GLOBAL);  
0153:  MOVLW  C0
0154:  IORWF  0B,F
....................  
.................... while(1)  
....................   {  
....................   // printf("Running...\n\r"); 
....................    output_toggle(PIN_A5); 
0155:  BCF    0C.5
0156:  MOVLW  20
0157:  MOVLB  02
0158:  XORWF  0C,F
....................    if(got_pulse_width)  
0159:  MOVLB  00
015A:  MOVF   2A,F
015B:  BTFSC  03.2
015C:  GOTO   185
....................      {  
....................       disable_interrupts(GLOBAL);  
015D:  BCF    0B.6
015E:  BCF    0B.7
015F:  BTFSC  0B.7
0160:  GOTO   15E
....................       local_ccp_delta = ccp_delta;   
0161:  MOVF   2C,W
0162:  MOVWF  32
0163:  MOVF   2B,W
0164:  MOVWF  31
....................       enable_interrupts(GLOBAL);  
0165:  MOVLW  C0
0166:  IORWF  0B,F
....................  
....................       //pulse_width_ms = local_ccp_delta / 64;  
....................       pulse_width_ms = local_ccp_delta / 16; 
0167:  RRF    32,W
0168:  MOVWF  30
0169:  RRF    31,W
016A:  MOVWF  2F
016B:  RRF    30,F
016C:  RRF    2F,F
016D:  RRF    30,F
016E:  RRF    2F,F
016F:  RRF    30,F
0170:  RRF    2F,F
0171:  MOVLW  0F
0172:  ANDWF  30,F
....................       printf("%lu ms \n\r", pulse_width_ms);  
0173:  MOVLW  10
0174:  MOVWF  04
0175:  MOVF   30,W
0176:  MOVWF  34
0177:  MOVF   2F,W
0178:  MOVWF  33
0179:  GOTO   061
017A:  MOVLW  5D
017B:  MOVLB  03
017C:  MOVWF  11
017D:  MOVLW  00
017E:  MOVWF  12
017F:  BSF    03.0
0180:  MOVLW  06
0181:  MOVLB  00
0182:  MOVWF  33
0183:  GOTO   0BB
....................       got_pulse_width = FALSE; 
0184:  CLRF   2A
....................      }  
....................  
....................    delay_ms(500);  
0185:  MOVLW  02
0186:  MOVWF  33
0187:  MOVLW  FA
0188:  MOVWF  34
0189:  GOTO   10F
018A:  DECFSZ 33,F
018B:  GOTO   187
....................  
....................   }  
018C:  MOVLB  01
018D:  GOTO   155
....................  
.................... } 
018E:  SLEEP

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT PLL_SW STVREN BORV19 NODEBUG NOLVP
